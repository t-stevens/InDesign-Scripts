var myDoc = app.activeDocument;var myPath = myDoc.filePath;var myLinks = myDoc.links;var myInputs = chooseExport();var myType = myInputs[0].toString();var myRes = parseInt(myInputs[1]);var imgSize, fName;switch (myType) {	case 'Square':	imgSize = '_sq';	fName = 'sq';	break;	case '5:6':	fName = '56';	imgSize = '_crp56';	break;	case '5:8':	imgSize = '_crp58';	fName = '58';	break;}//create folder for JPEGsvar jpegFolder = new Folder(myPath + '/' + fName + '/');if (! jpegFolder.exists) {	jpegFolder.create();}var lName, lPage;var linkInfo =[];var errors =[];for (var l = 0; l < myLinks.length; l++) {	try {		lName = getLinkName(myLinks[l].name) + imgSize;		lPage = getLinkPage(myLinks[l]);		exportJPEG(lName, lPage);	}	catch (e) {		errors.push(myLinks[l].name);	}}if (errors.length > 0) {	var badLinks = errors.join(', ');	alert("DONE. The following links couldn't be exported: " + badLinks);} else {	alert('DONE');}function getLinkName(link) {	var temp1 = link.split('.');	var temp2 = temp1.slice(0, -1);	var temp3 = temp2.join('.');	return temp3;}function getLinkPage(link) {	var item = link.parent;	var myPage = item.parentPage;	return myPage;}function chooseExport() {	var fileTypes =[ 'Square', '5:6', '5:8'];		//set up dialog window	myDlg = new Window('dialog', 'Image Dimensions');	//choose rows or columns	myDlg.orientation = 'column';	myDlg.alignment = 'right';	//drop-down setup	myDlg.DDgroup1 = myDlg.add('group');	myDlg.DDgroup1.orientation = 'row';		//add static text	myDlg.DDgroup1.add('statictext', undefined, "Select dimension");	//add drop down list	myDlg.DDgroup1.DD = myDlg.DDgroup1.add('dropdownlist', undefined, undefined, {		items: fileTypes	})		var myInputGroup1 = myDlg.add ("group");	myInputGroup1.orientation = "row";	myInputGroup1.alignment = "right";	myInputGroup1.add ("statictext", undefined, "Resolution:");	var style1 = myInputGroup1.add ("edittext", undefined, "");	style1.characters = 5;	style1.active = true;			//add default selection	myDlg.DDgroup1.DD.selection = 0;	//add button	myDlg.closeBtn = myDlg.add('button', undefined, 'OK');	// add button functions	myDlg.closeBtn.onClick = function () {		//close window		this.parent.close();	}	//show window and store drop down value	result = myDlg.show();	return[myDlg.DDgroup1.DD.selection, style1.text];}function exportJPEG(linkName, linkPage) {	myPages = linkPage.name;	myfileName = linkName;	app.jpegExportPreferences.pageString = myPages;	app.jpegExportPreferences.jpegExportRange = ExportRangeOrAllPages.EXPORT_RANGE;	app.jpegExportPreferences.jpegQuality = JPEGOptionsQuality.HIGH;	app.jpegExportPreferences.exportResolution = myRes;	myDoc.exportFile (ExportFormat.JPG, File(jpegFolder + "/" + myfileName + '.jpg'), false);}