var myDoc = app.activeDocument;var myDlg = app.dialogs.add();with(myDlg){    with(dialogColumns.add()){        with(borderPanels.add()){            with(dialogRows.add()){                staticTexts.add({staticLabel:"Select which tasks to perform:"});            }            with(dialogRows.add()){                var myCb1 = checkboxControls.add({staticLabel:"Remove overrides", checkedState:true});            }            with(dialogRows.add()){                var myCb2 = checkboxControls.add({staticLabel:"Fix extending character styles", checkedState:true});            }        }    }}if(myDlg.show()){    if((myCb1.checkedState) && (!myCb2.checkedState)){        clear ();        //$.writeln ('overrides cleared');        }    else if(myCb2.checkedState){        applyNoneCharStyle ();        clear ();        remapStyles ();        //$.writeln ('everything done');        }}function applyNoneCharStyle(){    app.activeDocument.stories.everyItem().texts.everyItem().applyCharacterStyle(app.activeDocument.characterStyles.item(0), false);    try{    var myTables = app.activeDocument.stories.everyItem().tables.everyItem();    myTables.cells.everyItem().paragraphs.everyItem().applyCharacterStyle(app.activeDocument.characterStyles.item(0), false);    } catch(e){}    }function clear(){    myDoc.stories.everyItem().clearOverrides();    try{    var myTables = app.activeDocument.stories.everyItem().tables.everyItem();    myTables.cells.everyItem().paragraphs.everyItem().clearOverrides();    } catch(e){}}function remapStyles(){    myDoc.mapXMLTagsToStyles();    }